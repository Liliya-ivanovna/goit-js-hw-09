{"mappings":"gfAAAA,EAAA,SACeC,SAASC,uBAAuB,QACjCD,SAASE,kBAAkB,UADzC,IAEMC,EAAMH,SAASE,kBAAkB,SACvC,SAAuBE,EAAUC,GAE/B,GADoBC,KAAKC,SAAW,GAGlC,OAAQF,EAAMF,EAEdK,QAAQC,IAAI,sBAAuCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,EAI7DM,CAAc,EAAE,MACbC,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE3DS,OAAM,SAAAD,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.getElementsByClassName('form');\nconst amount =document.getElementsByName(\"amount\");\nconst step =document.getElementsByName(\"step\");\nfunction createPromise(position, delay) {\nconst shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    \n    return (delay+step)\n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    // Reject\n  }\n}\ncreatePromise(2,1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["parcelRequire","document","getElementsByClassName","getElementsByName","$ce04d3a99e08e73b$var$step","position","delay","Math","random","console","log","concat","$ce04d3a99e08e73b$var$createPromise","then","param","catch"],"version":3,"file":"03-promises.10e0c2ff.js.map"}